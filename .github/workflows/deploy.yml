name: Deploy to Google Cloud VM

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no pranay.vishwakarma7400@${{ secrets.VM_Static_Ip }} "
            cd /home/pranay.vishwakarma7400/codemelon &&
            git pull &&
            echo 'DB_CONFIG_URL=${{ secrets.DB_CONFIG_URL }}' > .env &&
            echo 'SERVER_KEY=${{ secrets.SERVER_KEY }}' >> .env &&
            echo 'JWT_SECRET=${{ secrets.JWT_SECRET }}' >> .env &&
            echo 'JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}' >> .env &&
            echo 'GENERATION_KEY=${{ secrets.GENERATION_KEY }}' >> .env &&
            echo 'AI_API_KEY1=${{ secrets.AI_API_KEY1 }}' >> .env &&
            echo 'AI_API_KEY2=${{ secrets.AI_API_KEY2 }}' >> .env &&
            echo 'AI_API_KEY3=${{ secrets.AI_API_KEY3 }}' >> .env &&
            echo 'AI_URL'=${{ secrets.AI_URL }}' >> .env &&
            echo 'AI_URL2=${{ secrets.AI_URL2 }}' >> .env &&
            echo 'AI_URL3=${{ secrets.AI_URL3 }}' >> .env &&
            echo 'AI_URL4=${{ secrets.AI_URL4 }}' >> .env &&
            echo 'SYSTEM_PROMPT=${{ secrets.SYSTEM_PROMPT }}' >> .env &&
            sudo touch letsencrypt/acme.json &&
            sudo chmod 600 letsencrypt/acme.json &&
            sudo docker-compose down || true &&
            sudo docker-compose build &&
            sudo docker-compose up -d
          "
